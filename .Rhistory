modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kable_styling(latex_options = "HOLD_position")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
landscape() %>%
kable_styling(latex_options = "HOLD_position")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kableExtra::landscape() %>%
kable_styling(latex_options = "HOLD_position")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kable_styling(full_width = FALSE,
latex_options = "HOLD_position")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'flextable',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kable_styling(full_width = FALSE,
latex_options = "HOLD_position")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'flextable',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5))
library(flextable)
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'flextable',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5")
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'flextable',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
autofit()
# Report the new model ----
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kable_styling(latex_options = "HOLD_position")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
include = FALSE
)
# Load libraries ----
library(tidyverse)
library(haven)
library(estimatr)     # To cluster standard errors
library(modelsummary) # For neat reporting tables
library(kableExtra)   # For additional table formatting
library(RColorBrewer) # For colour-blind friendly palettes
library(countrycode)  # To reorganise countries across coding schemes
# Load data ----
# The file "modelling.R" contains the data cleaning process.
df1 <- read_csv("~/GitHub/masterspaper/kaksoy_masterpaperdata.csv")
# Write a function to reverse the scales of some unintuitively coded variables.
reversr <- function (x, na.rm = T) {
min(x, na.rm = T) - x + max(x, na.rm = T)
}
# Here, I reverse several variables as they are coded unintuitively. For instance,
# `v2excrptps` (public sector bribery) is originally coded 4 for virtually none,
# and 0 for rampant. This is unintuitive, particularly when interpreting regression
# results, and therefore, I have reversed the scale. `v2x_clphy` (physical violence
# index) is of a similar nature.
lm1 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy),
data = df1,
clusters = country_id)
View(df1)
# Here, I reverse several variables as they are coded unintuitively. For instance,
# `v2excrptps` (public sector bribery) is originally coded 4 for virtually none,
# and 0 for rampant. This is unintuitive, particularly when interpreting regression
# results, and therefore, I have reversed the scale. `v2x_clphy` (physical violence
# index) is of a similar nature.
lm1 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy),
data = df1,
clusters = country_text_id)
# Load data ----
# Load and clean data ----
mydata1 <- read_csv("~/Documents/Data/V_Dem_v13.csv") %>%
mutate(., region = as_factor(e_regionpol)) %>% # Recoding regions as factors
select(., c("country_name", "country_text_id", "year", "v2x_polyarchy", "v2x_clphy",
"v2excrptps", "v2exl_legitperf", "e_gdppc", "region")) %>%
filter(., v2x_polyarchy <= 0.42) # To filter out the non-democracies.
# Load and clean data ----
mydata1 <- read_csv("~/Documents/Data/V_Dem_v13.csv") %>%
mutate(., region = as_factor(e_regionpol)) %>% # Recoding regions as factors
select(., c("country_name", "country_text_id", "year", "v2x_polyarchy", "v2x_clphy",
"v2excrptps", "v2exl_legitperf", "e_gdppc", "region")) %>%
filter(., v2x_polyarchy <= 0.42) # To filter out the non-democracies.
mydata2 <- read_delim("~/Documents/Data/masskillings.txt") %>%
mutate(., masskilling = as_factor(lag(ongoing, n = 3)),
country_name = country,
country_text_id = sftgcode) %>%
select(., c("country_text_id", "year", "masskilling")) %>%
na.omit(.)
# So, it's problematic to try and expand the years. Recreating the dataset is actually easier.
# mydata3 <- read_dta("~/Documents/Data/marx.dta") %>%
#   drop_na(., cowcode) %>% # Some unrecognised countries (e.g., Abkhazia) cause issues here.
#   mutate(., country_text_id = countrycode(cowcode, origin = 'cown', destination = 'cowc')) %>%
#   select(., c("country_text_id", "year", "marx"))
# So this is the solution I hacked together. Not really proud of it, but it gets the job done.
mydata3 <- expand_grid(year = c(1789:2022),
country_text_id = unique(mydata1$country_text_id)) %>%
mutate(., marx = case_when(
country_text_id == "CHN" & year > 1949 ~ 1,
country_text_id == "LAO" & year > 1975 ~ 1,
country_text_id == "VNM" & year > 1959 ~ 1,
country_text_id == "CUB" & year > 1959 ~ 1,
# country_text_id == "PRK" & year > 1945 ~ 1, # Uncomment for North Korea as communist today
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "AFG" & year > 1978 & year <= 1992 ~ 1,
country_text_id == "UKR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "BLR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "DDR" & year > 1949 & year <= 1990 ~ 1,
country_text_id == "EST" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LVA" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LTU" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "HUN" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "AZE" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "CZE" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "TJK" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "TKM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "UZB" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "POL" & year > 1945 & year <= 1991 ~ 1,
country_text_id == "GEO" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "ARM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "MNG" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "KAZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "KGZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "ROU" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "MDA" & year > 1940 & year <= 1991 ~ 1,
country_text_id == "ALB" & year > 1944 & year <= 1992 ~ 1,
country_text_id == "BGR" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "PRK" & year > 1945 & year <= 2009 ~ 1, # Comment out for PRK communist today
country_text_id == "YMD" & year > 1967 & year <= 1990 ~ 1,
country_text_id == "SDN" & year > 1969 & year <= 1985 ~ 1,
country_text_id == "SOM" & year > 1969 & year <= 1991 ~ 1,
country_text_id == "COG" & year > 1969 & year <= 1992 ~ 1,
country_text_id == "ETH" & year > 1974 & year <= 1991 ~ 1,
country_text_id == "MOZ" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "AGO" & year > 1975 & year <= 1992 ~ 1,
country_text_id == "BEN" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "KHM" & year > 1976 & year <= 1992 ~ 1,
country_text_id == "BFA" & year > 1984 & year <= 1987 ~ 1,
country_text_id == "SYC" & year > 1979 & year <= 1991 ~ 1,
TRUE ~ 0
)
) %>%
arrange(., country_text_id)
# Merge as necessary ----
df1 <- list(mydata1, mydata2, mydata3) %>%
reduce(left_join, by = c("country_text_id", "year")) %>%
distinct(., country_text_id, year, .keep_all = TRUE) # Eliminate duplicates if there are any
# Save the master data to a file so as to be able to provide a replication dataset.
write_csv(df1, "kaksoy_masterpaperdata.csv")
# Load data ----
# The file "modelling.R" contains the data cleaning process.
df1 <- read_csv("~/GitHub/masterspaper/kaksoy_masterpaperdata.csv")
# Write a function to reverse the scales of some unintuitively coded variables.
reversr <- function (x, na.rm = T) {
min(x, na.rm = T) - x + max(x, na.rm = T)
}
# Here, I reverse several variables as they are coded unintuitively. For instance,
# `v2excrptps` (public sector bribery) is originally coded 4 for virtually none,
# and 0 for rampant. This is unintuitive, particularly when interpreting regression
# results, and therefore, I have reversed the scale. `v2x_clphy` (physical violence
# index) is of a similar nature.
lm1 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy),
data = df1,
clusters = country_text_id)
mydata1
# Load data ----
# Load and clean data ----
mydata1 <- read_csv("~/Documents/Data/V_Dem_v13.csv") %>%
mutate(., region = as_factor(e_regionpol)) %>% # Recoding regions as factors
select(., c("country_name", "country_text_id", "year", "v2x_polyarchy", "v2x_clphy",
"v2excrptps", "v2exl_legitperf", "e_gdppc", "region")) %>%
filter(., v2x_polyarchy <= 0.42) # To filter out the non-democracies.
mydata2 <- read_delim("~/Documents/Data/masskillings.txt") %>%
mutate(., masskilling = as_factor(lag(ongoing, n = 3)),
country_name = country,
country_text_id = sftgcode) %>%
select(., c("country_text_id", "year", "masskilling")) %>%
na.omit(.)
# So this is the solution I hacked together. Not really proud of it, but it gets the job done.
mydata3 <- expand_grid(year = c(1789:2022),
country_text_id = unique(mydata1$country_text_id)) %>%
mutate(., marx = case_when(
country_text_id == "CHN" & year > 1949 ~ 1,
country_text_id == "LAO" & year > 1975 ~ 1,
country_text_id == "VNM" & year > 1959 ~ 1,
country_text_id == "CUB" & year > 1959 ~ 1,
# country_text_id == "PRK" & year > 1945 ~ 1, # Uncomment for North Korea as communist today
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "AFG" & year > 1978 & year <= 1992 ~ 1,
country_text_id == "UKR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "BLR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "DDR" & year > 1949 & year <= 1990 ~ 1,
country_text_id == "EST" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LVA" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LTU" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "HUN" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "AZE" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "CZE" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "TJK" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "TKM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "UZB" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "POL" & year > 1945 & year <= 1991 ~ 1,
country_text_id == "GEO" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "ARM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "MNG" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "KAZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "KGZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "ROU" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "MDA" & year > 1940 & year <= 1991 ~ 1,
country_text_id == "ALB" & year > 1944 & year <= 1992 ~ 1,
country_text_id == "BGR" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "PRK" & year > 1945 & year <= 2009 ~ 1, # Comment out for PRK communist today
country_text_id == "YMD" & year > 1967 & year <= 1990 ~ 1,
country_text_id == "SDN" & year > 1969 & year <= 1985 ~ 1,
country_text_id == "SOM" & year > 1969 & year <= 1991 ~ 1,
country_text_id == "COG" & year > 1969 & year <= 1992 ~ 1,
country_text_id == "ETH" & year > 1974 & year <= 1991 ~ 1,
country_text_id == "MOZ" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "AGO" & year > 1975 & year <= 1992 ~ 1,
country_text_id == "BEN" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "KHM" & year > 1976 & year <= 1992 ~ 1,
country_text_id == "BFA" & year > 1984 & year <= 1987 ~ 1,
country_text_id == "SYC" & year > 1979 & year <= 1991 ~ 1,
TRUE ~ 0
)
) %>%
arrange(., country_text_id)
# Merge as necessary ----
df1 <- list(mydata1, mydata2, mydata3) %>%
reduce(left_join, by = c("country_text_id", "year")) %>%
distinct(., country_text_id, year, .keep_all = TRUE) # Eliminate duplicates if there are any
df1
View(df1)
# Save the master data to a file so as to be able to provide a replication dataset.
write_csv(df1, "kaksoy_masterpaperdata.csv")
# Save the master data to a file so as to be able to provide a replication dataset.
write_csv(df1, "kaksoy_masterpaperdata.csv")
# Set working directory
setwd("~/GitHub/masterspaper")
# Save the master data to a file so as to be able to provide a replication dataset.
write_csv(df1, "kaksoy_masterpaperdata.csv")
# Load data ----
# The file "modelling.R" contains the data cleaning process.
df1 <- read_csv("~/GitHub/masterspaper/kaksoy_masterpaperdata.csv")
min(x, na.rm = T) - x + max(x, na.rm = T)
# Write a function to reverse the scales of some unintuitively coded variables.
reversr <- function (x, na.rm = T) {
min(x, na.rm = T) - x + max(x, na.rm = T)
}
# Here, I reverse several variables as they are coded unintuitively. For instance,
# `v2excrptps` (public sector bribery) is originally coded 4 for virtually none,
# and 0 for rampant. This is unintuitive, particularly when interpreting regression
# results, and therefore, I have reversed the scale. `v2x_clphy` (physical violence
# index) is of a similar nature.
lm1 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy),
data = df1,
clusters = country_text_id)
lm2 <- lm_robust(reversr(v2excrptps) ~ v2exl_legitperf,
data = df1,
clusters = country_text_id)
lm3 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf,
data = df1,
clusters = country_text_id)
lm4 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf +
log(e_gdppc),
data = df1,
clusters = country_text_id)
lm5 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf +
log(e_gdppc) + v2x_polyarchy,
data = df1,
clusters = country_text_id)
modelsummary(list(lm1, lm2, lm3, lm4, lm5),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 1-5") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 5)) %>%
kable_styling(latex_options = "HOLD_position")
lm6 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf +
log(e_gdppc) + v2x_polyarchy + relevel(region, ref = 5),
data = df1,
clusters = country_text_id)
mydata1$region
df1$region
str(df1$region)
mydata1 <- read_csv("~/Documents/Data/V_Dem_v13.csv") %>%
mutate(., region = as_factor(e_regionpol)) %>% # Recoding regions as factors
select(., c("country_name", "country_text_id", "year", "v2x_polyarchy", "v2x_clphy",
"v2excrptps", "v2exl_legitperf", "e_gdppc", "region")) %>%
filter(., v2x_polyarchy <= 0.42) # To filter out the non-democracies.
mydata2 <- read_delim("~/Documents/Data/masskillings.txt") %>%
mutate(., masskilling = as_factor(lag(ongoing, n = 3)),
country_name = country,
country_text_id = sftgcode) %>%
select(., c("country_text_id", "year", "masskilling")) %>%
na.omit(.)
# So, it's problematic to try and expand the years. Recreating the dataset is actually easier.
# mydata3 <- read_dta("~/Documents/Data/marx.dta") %>%
#   drop_na(., cowcode) %>% # Some unrecognised countries (e.g., Abkhazia) cause issues here.
#   mutate(., country_text_id = countrycode(cowcode, origin = 'cown', destination = 'cowc')) %>%
#   select(., c("country_text_id", "year", "marx"))
# So this is the solution I hacked together. Not really proud of it, but it gets the job done.
mydata3 <- expand_grid(year = c(1789:2022),
country_text_id = unique(mydata1$country_text_id)) %>%
mutate(., marx = case_when(
country_text_id == "CHN" & year > 1949 ~ 1,
country_text_id == "LAO" & year > 1975 ~ 1,
country_text_id == "VNM" & year > 1959 ~ 1,
country_text_id == "CUB" & year > 1959 ~ 1,
# country_text_id == "PRK" & year > 1945 ~ 1, # Uncomment for North Korea as communist today
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "AFG" & year > 1978 & year <= 1992 ~ 1,
country_text_id == "UKR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "BLR" & year > 1919 & year <= 1991 ~ 1,
country_text_id == "DDR" & year > 1949 & year <= 1990 ~ 1,
country_text_id == "EST" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LVA" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "LTU" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "HUN" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "AZE" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "CZE" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "TJK" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "TKM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "UZB" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "POL" & year > 1945 & year <= 1991 ~ 1,
country_text_id == "GEO" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "ARM" & year > 1920 & year <= 1991 ~ 1,
country_text_id == "MNG" & year > 1921 & year <= 1991 ~ 1,
country_text_id == "KAZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "KGZ" & year > 1936 & year <= 1991 ~ 1,
country_text_id == "ROU" & year > 1944 & year <= 1989 ~ 1,
country_text_id == "MDA" & year > 1940 & year <= 1991 ~ 1,
country_text_id == "ALB" & year > 1944 & year <= 1992 ~ 1,
country_text_id == "BGR" & year > 1944 & year <= 1990 ~ 1,
country_text_id == "RUS" & year > 1918 & year <= 1991 ~ 1,
country_text_id == "PRK" & year > 1945 & year <= 2009 ~ 1, # Comment out for PRK communist today
country_text_id == "YMD" & year > 1967 & year <= 1990 ~ 1,
country_text_id == "SDN" & year > 1969 & year <= 1985 ~ 1,
country_text_id == "SOM" & year > 1969 & year <= 1991 ~ 1,
country_text_id == "COG" & year > 1969 & year <= 1992 ~ 1,
country_text_id == "ETH" & year > 1974 & year <= 1991 ~ 1,
country_text_id == "MOZ" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "AGO" & year > 1975 & year <= 1992 ~ 1,
country_text_id == "BEN" & year > 1975 & year <= 1990 ~ 1,
country_text_id == "KHM" & year > 1976 & year <= 1992 ~ 1,
country_text_id == "BFA" & year > 1984 & year <= 1987 ~ 1,
country_text_id == "SYC" & year > 1979 & year <= 1991 ~ 1,
TRUE ~ 0
)
) %>%
arrange(., country_text_id)
# Merge as necessary ----
df1 <- list(mydata1, mydata2, mydata3) %>%
reduce(left_join, by = c("country_text_id", "year")) %>%
distinct(., country_text_id, year, .keep_all = TRUE) # Eliminate duplicates if there are any
str(df1$region)
# Save the master data to a file so as to be able to provide a replication dataset.
setwd("~/GitHub/masterspaper")
write_csv(df1, "kaksoy_masterpaperdata.csv")
write_csv(df1, "kaksoy_masterpaperdata.csv")
# Load data ----
# The file "modelling.R" contains the data cleaning process.
df1 <- read_csv("~/GitHub/masterspaper/kaksoy_masterpaperdata.csv")
str(df1$region)
# Load data ----
# The file "modelling.R" contains the data cleaning process. Some things are still necessary.
df1 <- read_csv("~/GitHub/masterspaper/kaksoy_masterpaperdata.csv") %>%
mutate(., region = as_factor(region))
str(df1$region)
lm6 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf +
log(e_gdppc) + v2x_polyarchy + relevel(region, ref = 5),
data = df1,
clusters = country_text_id)
lm7 <- lm_robust(reversr(v2excrptps) ~ reversr(v2x_clphy) + v2exl_legitperf +
log(e_gdppc) + v2x_polyarchy + relevel(region, ref = 5) +
marx,
data = df1,
clusters = country_text_id)
modelsummary(list(lm6, lm7),
output = 'kableExtra',
stars = c('*' = .1, '**' = .05, '***' = .01),
coef_map = c('reversr(v2x_clphy)' = 'Physical violence index',
'v2exl_legitperf' = 'Performance legitimation',
'log(e_gdppc)' = 'Logged GDP per capita',
'v2x_polyarchy' = 'Electoral democracy index',
'relevel(region, ref = 5)1' = 'Region: Eastern Europe and post-Soviet',
'relevel(region, ref = 5)2' = 'Region: Latin America',
'relevel(region, ref = 5)3' = 'Region: North Africa and Middle East',
'relevel(region, ref = 5)4' = 'Region: Sub-Saharan Africa',
'relevel(region, ref = 5)6' = 'Region: Eastern Asia',
'relevel(region, ref = 5)7' = 'Region: Southeastern Asia',
'relevel(region, ref = 5)8' = 'Region: Southern Asia',
'relevel(region, ref = 5)9' = 'Region: The Pacific',
'relevel(region, ref = 5)10' = 'Region: The Caribbean',
'marx' = 'Communist',
'(Intercept)' = 'Intercept'),
gof_omit = 'BIC|Log.Lik.|RMSE|Std.Errors',
notes = list('Standard errors clustered by country.'),
title = "Models 6-7") %>%
add_header_above(c(" " = 1,
"Low-level bribery" = 2)) %>%
kable_styling(latex_options = "HOLD_position")
